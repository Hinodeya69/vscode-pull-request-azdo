{
  "name": "vscode-pull-request-azdo",
  "displayName": "Azure Devops Pull Requests",
  "description": "Pull Request Provider for Azure Devops",
  "icon": "resources/icons/azdo_logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/ankitbko/vscode-pull-request-azdo"
  },
  "bugs": {
    "url": "https://github.com/ankitbko/vscode-pull-request-azdo/issues"
  },
  "enableProposedApi": true,
  "preview": true,
  "version": "0.0.1",
  "publisher": "ankitbko",
  "engines": {
    "vscode": "^1.52.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onFileSystem:newIssue"
  ],
  "browser": "./dist/browser/extension",
  "main": "./media/extension",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Azdo Pull Requests",
      "properties": {
        "azdoPullRequests.projectName": {
          "type": "string"
        },
        "azdoPullRequests.orgUrl": {
          "type": "string"
        },
        "azdoPullRequests.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable usage data and errors to be sent to a Azure Appinsights online service"
        },
        "azdoPullRequests.diffBase": {
          "type": "string",
          "enum": [
            "mergebase",
            "head"
          ],
          "enumDescriptions": [
            "Use the merge base of PR",
            "Use the target branch's HEAD"
          ],
          "default": "head",
          "description": "The commit used to calculate diff against PR's HEAD."
        },
        "azdoPullRequests.pullRequestTitle": {
          "type": "string",
          "enum": [
            "commit",
            "branch",
            "custom",
            "ask"
          ],
          "enumDescriptions": [
            "Use the latest commit message",
            "Use the branch name",
            "Specify a custom title",
            "Ask which of the above methods to use"
          ],
          "default": "ask",
          "description": "The title used when creating pull requests."
        },
        "azdoPullRequests.pullRequestDescription": {
          "type": "string",
          "enum": [
            "template",
            "commit",
            "custom",
            "ask"
          ],
          "enumDescriptions": [
            "Use a pull request template, or use the commit description if no templates were found",
            "Use the latest commit message",
            "Specify a custom description",
            "Ask which of the above methods to use"
          ],
          "default": "template",
          "description": "The description used when creating pull requests."
        },
        "azdoPullRequests.logLevel": {
          "type": "string",
          "enum": [
            "info",
            "debug",
            "off"
          ],
          "default": "info",
          "description": "Logging for Azure Devops Pull Request extension. The log is emitted to the output channel named as Azure Devops Pull Request."
        },
        "azdoPullRequests.remotes": {
          "type": "array",
          "default": [
            "origin",
            "upstream"
          ],
          "items": {
            "type": "string"
          },
          "markdownDescription": "List of remotes, by name, to fetch pull requests from."
        },
        "azdoPullRequests.includeRemotes": {
          "type": "string",
          "enum": [
            "default",
            "all"
          ],
          "default": "default",
          "deprecationMessage": "The setting `azdoPullRequests.includeRemotes` has been deprecated. Use `azdoPullRequests.remotes` to configure what remotes are shown.",
          "description": "By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'."
        },
        "azdoPullRequests.defaultMergeMethod": {
          "type": "string",
          "enum": [
            "NoFastForward",
            "Squash",
            "Rebase",
            "RebaseMerge"
          ],
          "default": "Squash",
          "description": "The method to use when merging pull requests."
        },
        "azdoPullRequests.fileListLayout": {
          "type": "string",
          "enum": [
            "flat",
            "tree"
          ],
          "default": "tree",
          "description": "The layout to use when displaying changed files list."
        },
        "azdoPullRequests.defaultDeletionMethod.selectLocalBranch": {
          "type": "boolean",
          "default": true,
          "description": "When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request."
        },
        "azdoPullRequests.defaultDeletionMethod.selectRemote": {
          "type": "boolean",
          "default": true,
          "description": "When true, the option to delete the remote will be selected by default when deleting a branch from a pull request."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "azdo-pull-requests",
          "title": "Azure Devops",
          "icon": "resources/icons/pull-request.png"
        }
      ]
    },
    "views": {
      "azdo-pull-requests": [
        {
          "id": "azdo:login",
          "name": "Login",
          "when": "ReposManagerStateContext == NeedsAuthentication",
          "icon": "resources/icons/pull-request.png"
        },
        {
          "id": "prStatus:azdo",
          "name": "Changes In Pull Request",
          "when": "azdo:inReviewMode",
          "icon": "resources/icons/pull-request.png",
          "visibility": "visible"
        },
        {
          "id": "pr:azdo",
          "name": "Pull Requests",
          "when": "ReposManagerStateContext != NeedsAuthentication && !azdo:focusedReview",
          "icon": "resources/icons/pull-request.png"
        },
        {
          "id": "azdo:activePullRequest",
          "type": "webview",
          "name": "Active Pull Request",
          "when": "azdo:focusedReview"
        }
      ]
    },
    "commands": [
      {
        "command": "pr.create",
        "title": "Create Pull Request",
        "icon": "$(plus)",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.createDraft",
        "title": "Create Draft Pull Request",
        "icon": "$(plus)",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "auth.signout",
        "title": "Sign out of AzDO",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.pick",
        "title": "Checkout Pull Request",
        "category": "AzDO Pull Requests",
        "icon": "$(arrow-right)"
      },
      {
        "command": "pr.exit",
        "title": "Exit Review Mode",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.merge",
        "title": "Merge Pull Request",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.readyForReview",
        "title": "Mark Pull Request Ready For Review",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.close",
        "title": "Close Pull Request",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.openPullRequestInAzdo",
        "title": "Open Pull Request in AzDO",
        "category": "AzDO Pull Requests",
        "icon": "$(globe)"
      },
      {
        "command": "pr.refreshPullRequest",
        "title": "Refresh Pull Request",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.openFileInAzdo",
        "title": "Open File in AzDO",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.copyCommitHash",
        "title": "Copy Commit Hash",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.openOriginalFile",
        "title": "Open Original File",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.openModifiedFile",
        "title": "Open Modified File",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.openDiffView",
        "title": "Open Diff View",
        "category": "AzDO Pull Requests",
        "icon": "$(compare-changes)"
      },
      {
        "command": "pr.openChangedFile",
        "title": "Open Changed File in PR",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.openDescription",
        "title": "View Pull Request Description",
        "category": "AzDO Pull Requests",
        "when": "azdo:inReviewMode"
      },
      {
        "command": "pr.openDescriptionToTheSide",
        "title": "Open Pull Request Description to the Side",
        "icon": "$(split-horizontal)"
      },
      {
        "command": "pr.refreshDescription",
        "title": "Refresh Pull Request Description",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "review.openFile",
        "title": "Open File",
        "icon": "$(go-to-file)"
      },
      {
        "command": "review.suggestDiff",
        "title": "Suggest Edit"
      },
      {
        "command": "pr.refreshList",
        "title": "Refresh Pull Requests List",
        "icon": "$(refresh)",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.setFileListLayoutAsTree",
        "title": "Toggle View Mode",
        "icon": "$(list-tree)",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.setFileListLayoutAsFlat",
        "title": "Toggle View Mode",
        "icon": "$(list-flat)",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.refreshChanges",
        "title": "Refresh",
        "icon": "$(refresh)",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.configurePRViewlet",
        "title": "Configure...",
        "category": "AzDO Pull Requests",
        "icon": "$(gear)"
      },
      {
        "command": "pr.deleteLocalBranch",
        "title": "Delete Local Branch",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.signin",
        "title": "Sign in to AzDO",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.deleteLocalBranchesNRemotes",
        "title": "Delete local branches and remotes",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.createComment",
        "title": "Add Comment",
        "category": "AzDO Pull Requests",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "pr.changeThreadStatus",
        "title": "Change status",
        "category": "AzDO Pull Requests",
        "enablement": "!commentThreadIsEmpty",
        "icon": "$(settings)"
      },
      {
        "command": "pr.editComment",
        "title": "Edit Comment",
        "category": "AzDO Pull Requests",
        "icon": "$(edit)"
      },
      {
        "command": "pr.cancelEditComment",
        "title": "Cancel",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.saveComment",
        "title": "Save",
        "category": "AzDO Pull Requests",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "pr.deleteComment",
        "title": "Delete Comment",
        "category": "AzDO Pull Requests",
        "icon": "$(close)"
      },
      {
        "command": "pr.signinAndRefreshList",
        "title": "Sign in and Refresh",
        "category": "AzDO Pull Requests"
      },
      {
        "command": "pr.configureRemotes",
        "title": "Configure Remotes...",
        "category": "AzDO Pull Requests"
      }
    ],
    "viewsWelcome": [
      {
        "view": "azdo:login",
        "when": "ReposManagerStateContext == NeedsAuthentication",
        "contents": "You have not yet signed in with Azure Devops\n[Sign in](command:pr.signin)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "auth.signout",
          "when": "gitOpenRepositoryCount != 0 && azdo:authenticated"
        },
        {
          "command": "pr.configureRemotes",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "pr.configurePRViewlet",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "pr.pick",
          "when": "false"
        },
        {
          "command": "pr.exit",
          "when": "false"
        },
        {
          "command": "review.openFile",
          "when": "false"
        },
        {
          "command": "pr.openChangedFile",
          "when": "false"
        },
        {
          "command": "pr.close",
          "when": "gitOpenRepositoryCount != 0 && azdo:inReviewMode"
        },
        {
          "command": "pr.create",
          "when": "gitOpenRepositoryCount != 0 && azdo:authenticated"
        },
        {
          "command": "pr.createDraft",
          "when": "gitOpenRepositoryCount != 0 && azdo:authenticated"
        },
        {
          "command": "pr.merge",
          "when": "gitOpenRepositoryCount != 0 && azdo:inReviewMode"
        },
        {
          "command": "pr.readyForReview",
          "when": "gitOpenRepositoryCount != 0 && azdo:inReviewMode"
        },
        {
          "command": "pr.openPullRequestInAzdo",
          "when": "gitOpenRepositoryCount != 0 && azdo:inReviewMode"
        },
        {
          "command": "pr.refreshDescription",
          "when": "gitOpenRepositoryCount != 0 && azdo:inReviewMode"
        },
        {
          "command": "pr.openFileInAzdo",
          "when": "false"
        },
        {
          "command": "pr.openOriginalFile",
          "when": "false"
        },
        {
          "command": "pr.openModifiedFile",
          "when": "false"
        },
        {
          "command": "pr.refreshPullRequest",
          "when": "false"
        },
        {
          "command": "pr.deleteLocalBranch",
          "when": "false"
        },
        {
          "command": "pr.openDiffView",
          "when": "false"
        },
        {
          "command": "pr.openDescriptionToTheSide",
          "when": "false"
        },
        {
          "command": "pr.openDescription",
          "when": "gitOpenRepositoryCount != 0 && azdo:inReviewMode"
        },
        {
          "command": "pr.refreshList",
          "when": "gitOpenRepositoryCount != 0 && azdo:authenticated && azdo:hasAzdoRemotes"
        },
        {
          "command": "pr.setFileListLayoutAsTree",
          "when": "false"
        },
        {
          "command": "pr.setFileListLayoutAsFlat",
          "when": "false"
        },
        {
          "command": "pr.refreshChanges",
          "when": "false"
        },
        {
          "command": "pr.signin",
          "when": "gitOpenRepositoryCount != 0 && azdo:hasAzdoRemotes"
        },
        {
          "command": "pr.signinAndRefreshList",
          "when": "false"
        },
        {
          "command": "pr.copyCommitHash",
          "when": "false"
        },
        {
          "command": "pr.createComment",
          "when": "false"
        },
        {
          "command": "pr.changeThreadStatus",
          "when": "false"
        },
        {
          "command": "pr.editComment",
          "when": "false"
        },
        {
          "command": "pr.cancelEditComment",
          "when": "false"
        },
        {
          "command": "pr.saveComment",
          "when": "false"
        },
        {
          "command": "pr.deleteComment",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "pr.configurePRViewlet",
          "when": "gitOpenRepositoryCount != 0 && azdo:initialized && view =~ /(pr|issues):/",
          "group": "navigation@3"
        },
        {
          "command": "pr.refreshList",
          "when": "gitOpenRepositoryCount != 0 && azdo:initialized && view =~ /pr:/",
          "group": "navigation@2"
        },
        {
          "command": "pr.refreshChanges",
          "when": "view =~ /prStatus/",
          "group": "navigation@2"
        },
        {
          "command": "pr.setFileListLayoutAsTree",
          "when": "view =~ /prStatus/ && fileListLayout:flat",
          "group": "navigation"
        },
        {
          "command": "pr.setFileListLayoutAsFlat",
          "when": "view =~ /prStatus/ && !fileListLayout:flat",
          "group": "navigation"
        },
        {
          "command": "pr.openPullRequestInAzdo",
          "when": "view == azdo:activePullRequest && azdo:hasAzdoRemotes",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "pr.pick",
          "when": "view =~ /pr:/ && viewItem =~ /pullrequest(:local)?:nonactive|description/",
          "group": "pullrequest@1"
        },
        {
          "command": "pr.pick",
          "when": "view =~ /pr:/ && viewItem =~ /description/",
          "group": "inline"
        },
        {
          "command": "pr.exit",
          "when": "view =~ /pr:/ && viewItem =~ /pullrequest(:local)?:active|description/",
          "group": "pullrequest@1"
        },
        {
          "command": "pr.refreshPullRequest",
          "when": "view =~ /pr:/ && viewItem =~ /pullrequest|description/",
          "group": "pullrequest@2"
        },
        {
          "command": "pr.openPullRequestInAzdo",
          "when": "view =~ /pr:/ && viewItem =~ /pullrequest|description/",
          "group": "pullrequest@3"
        },
        {
          "command": "pr.deleteLocalBranch",
          "when": "view =~ /pr:/ && viewItem =~ /pullrequest:local:nonactive/",
          "group": "pullrequest@4"
        },
        {
          "command": "pr.openFileInAzdo",
          "when": "view =~ /(pr|prStatus)/ && viewItem =~ /filechange/"
        },
        {
          "command": "pr.copyCommitHash",
          "when": "view =~ /prStatus/ && viewItem =~ /commit/"
        },
        {
          "command": "pr.openDescriptionToTheSide",
          "group": "inline",
          "when": "view =~ /(pr|prStatus)/ && viewItem =~ /description/"
        },
        {
          "command": "review.openFile",
          "group": "inline",
          "when": "config.git.openDiffOnClick && view =~ /prStatus/ && viewItem =~ /filechange(?!:DELETE)/"
        },
        {
          "command": "pr.openDiffView",
          "group": "inline",
          "when": "!config.git.openDiffOnClick && view =~ /prStatus/ && viewItem =~ /filechange(?!:DELETE)/"
        },
        {
          "command": "pr.openOriginalFile",
          "when": "view =~ /(pr|prStatus)/ && viewItem =~ /filechange:MODIFY/"
        },
        {
          "command": "pr.openModifiedFile",
          "when": "view =~ /(pr|prStatus)/ && viewItem =~ /filechange:MODIFY/"
        },
        {
          "command": "pr.create",
          "when": "view =~ /issues:github/ && viewItem =~ /^(link)?currentissue/",
          "group": "issues_0@2"
        }
      ],
      "editor/title": [
        {
          "command": "review.openFile",
          "group": "navigation",
          "when": "resourceScheme =~ /^review$/"
        }
      ],
      "scm/title": [
        {
          "command": "review.suggestDiff",
          "when": "scmProvider == git && azdo:inReviewMode",
          "group": "inline"
        }
      ],
      "comments/commentThread/context": [
        {
          "command": "pr.createComment",
          "group": "inline",
          "when": "commentController =~ /^(browse|review)/"
        }
      ],
      "comments/commentThread/title": [
        {
          "command": "pr.changeThreadStatus",
          "group": "inline",
          "when": "commentController =~ /^(browse|review)/ && !commentThreadIsEmpty"
        }
      ],
      "comments/comment/title": [
        {
          "command": "pr.editComment",
          "group": "inline@1",
          "when": "commentController =~ /^(browse|review)/ && comment =~ /canEdit/"
        },
        {
          "command": "pr.deleteComment",
          "group": "inline@2",
          "when": "commentController =~ /^(browse|review)/ && comment =~ /canDelete/"
        }
      ],
      "comments/comment/context": [
        {
          "command": "pr.cancelEditComment",
          "group": "inline@1",
          "when": "commentController =~ /^(browse|review)/"
        },
        {
          "command": "pr.saveComment",
          "group": "inline@2",
          "when": "commentController =~ /^(browse|review)/"
        }
      ]
    },
    "colors": [
      {
        "id": "issues.newIssueDecoration",
        "defaults": {
          "dark": "#ffffff48",
          "light": "#00000048",
          "highContrast": "editor.foreground"
        },
        "description": "The color used for the assignees and labels fields in a new issue editor."
      },
      {
        "id": "issues.open",
        "defaults": {
          "dark": "#22863a",
          "light": "#22863a",
          "highContrast": "editor.foreground"
        },
        "description": "The color used for indicating that an issue is open."
      },
      {
        "id": "issues.closed",
        "defaults": {
          "dark": "#cb2431",
          "light": "#cb2431",
          "highContrast": "editor.foreground"
        },
        "description": "The color used for indicating that an issue is closed."
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --env.production --config-name webviewIndex.js && webpack --env.production --config-name activityBar-webviewIndex.js && webpack --env.production --config-name extension && npx webpack-cli --config browser.webpack.config --env.production --config-name extension --mode none",
    "postinstall": "cd src/typings && npx vscode-dts master && npx vscode-dts dev master",
    "compile": "tsc -p ./",
    "clean": "rm -r out/ media/",
    "webpack": "webpack --env.development --config-name webviewIndex.js && webpack --env.development --config-name activityBar-webviewIndex.js && webpack --env.development --config-name extension",
    "watch": "webpack --watch --env.development --info-verbosity verbose",
    "test": "yarn run preprocess && node ./out/test/runTests.js",
    "preprocess": "yarn run compile && yarn run preprocess-gql && yarn run preprocess-svg",
    "preprocess-gql": "node scripts/preprocess-gql --in src/github/queries.gql --out out/github/queries.gql",
    "preprocess-svg": "node scripts/preprocess-svg --in resources/ --out preview-src/dist/resources",
    "compile-web": "npx webpack-cli --config browser.webpack.config  --config-name webviewIndex.js --mode none && npx webpack-cli --config browser.webpack.config --config-name activityBar-webviewIndex.js && npx webpack-cli --config browser.webpack.config --config-name extension --mode none",
    "watch-web": "npx webpack-cli --config browser.webpack.config --mode none --watch --info-verbosity verbose"
  },
  "devDependencies": {
    "@types/chai": "^4.2.14",
    "@types/debounce": "^3.0.0",
    "@types/glob": "7.1.1",
    "@types/graphql": "^14.0.5",
    "@types/keytar": "^4.0.1",
    "@types/lru-cache": "^5.1.0",
    "@types/marked": "^0.7.2",
    "@types/mocha": "^5.2.2",
    "@types/node": "^12.0.0",
    "@types/node-fetch": "^2.1.4",
    "@types/query-string": "^6.1.1",
    "@types/react": "^16.8.4",
    "@types/react-dom": "^16.8.2",
    "@types/sinon": "7.0.11",
    "@types/temp": "0.8.34",
    "@types/uuid": "^3.4.3",
    "@types/webpack": "^4.41.6",
    "chai": "^4.2.0",
    "css-loader": "^3.4.2",
    "dotenv": "^8.2.0",
    "glob": "7.1.6",
    "jsdom": "16.2.0",
    "jsdom-global": "3.0.2",
    "merge-options": "^2.0.0",
    "minimist": "^1.2.3",
    "mkdirp": "0.5.1",
    "mocha": "^7.0.1",
    "mocha-junit-reporter": "1.23.0",
    "mocha-multi-reporters": "1.1.7",
    "react": "^16.12.0",
    "react-dom": "^16.12.0",
    "react-testing-library": "7.0.1",
    "sinon": "9.0.0",
    "source-map-support": "0.5.16",
    "style-loader": "^1.1.3",
    "svg-inline-loader": "^0.8.2",
    "temp": "0.9.1",
    "terser-webpack-plugin": "^4.1.0",
    "ts-loader": "^6.2.1",
    "tslint": "^6.0.0",
    "tslint-webpack-plugin": "^2.1.0",
    "tty": "1.0.1",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0",
    "webpack": "^4.41.6",
    "webpack-cli": "^3.3.11"
  },
  "dependencies": {
    "@octokit/rest": "^18.0.0",
    "@octokit/types": "^5.1.0",
    "apollo-boost": "^0.1.22",
    "apollo-link-context": "^1.0.12",
    "azure-devops-node-api": "^10.1.2",
    "cross-fetch": "^3.0.5",
    "debounce": "^1.2.0",
    "es6-promise": "^4.2.5",
    "events": "^3.0.0",
    "git-credential-node": "^1.1.0",
    "graphql": "^14.0.2",
    "js-base64": "^2.5.2",
    "lru-cache": "^5.1.1",
    "marked": "^0.8.0",
    "moment": "^2.22.1",
    "node-emoji": "^1.8.1",
    "node-fetch": "3.0.0-beta.9",
    "query-string": "^6.2.0",
    "raw-loader": "^4.0.1",
    "ssh-config": "^2.0.0-alpha.3",
    "tunnel": "0.0.6",
    "uuid": "^3.3.3",
    "vscode-extension-telemetry": "^0.1.3",
    "vsls": "^0.3.967"
  },
  "optionalDependencies": {
    "spawn-sync": "^2.0.0"
  },
  "resolutions": {
    "webpack/**/tar": "^4.4.2"
  },
  "license": "MIT"
}
